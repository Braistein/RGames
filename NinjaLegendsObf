getgenv().autoSwing = false
getgenv().autoSell = false
getgenv().collectHoop = false
getgenv().autoOpenCrystal = false
getgenv().buySword = false
getgenv().buyBelt = false
getgenv().buyRank = false
getgenv().buySkill = false
getgenv().autoSpin = false
--data
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character.Humanoid
local HumanoidRootPart = Character.HumanoidRootPart
LocalPlayer.CharacterAdded:Connect(function(Character)
    repeat wait() until Character:FindFirstChild("HumanoidRootPart")
    HumanoidRootPart = Character.HumanoidRootPart
end)
LocalPlayer.CharacterAdded:Connect(function(Character)
    repeat wait() until Character:FindFirstChild("Humanoid")
    Humanoid = Character.Humanoid
end)
local teleportTable = {}
for i,v in pairs(Workspace.islandUnlockParts:GetChildren()) do
    table.insert(teleportTable, v.Name)
end
local playerTable = {}
for i,v in pairs(Players:GetChildren()) do
    table.insert(playerTable, v.Name)
end
-- ui
loadstring(game:HttpGet(("https://raw.githubusercontent.com/Braistein/UI/main/MotLib")))()
MakeWindow({
    Hub = {
      Title = "Motto HUB | Ninja Legends",
      Animation = "by : Motto Hub"
    },
    Key = {
      KeySystem = false,
      Title = "Key System",
      Description = "",
      KeyLink = "",
      Keys = {"1234"},
      Notifi = {
        Notifications = true,
        CorrectKey = "Running the Script...",
        Incorrectkey = "The key is incorrect",
        CopyKeyLink = "Copied to Clipboard"
      }
    }
})
MinimizeButton({
    Image = "rbxassetid://16405119588",
    Size = {30, 30},
    Color = Color3.fromRGB(10, 10, 10),
    Corner = true,
    Stroke = true,
    StrokeColor = Color3.fromRGB(255, 49, 49)
})
-- pages
local FarmPage = MakeTab({Name = "Farm"})
local UpgradePage = MakeTab({Name = "Buy"})
local PlayerPage = MakeTab({Name = "Player"})
local CreditsPage = MakeTab({Name = "Credits"})
-- Farm
local FarmLabel = AddTextLabel(FarmPage, "Farm Settings")
SetLabel(FarmLabel, "Farm Settings")
local Toggle = AddToggle(FarmPage, {
    Name = "Auto Swing Farm",
    Default = false,
    Callback = function(value)
    getgenv().autoSwing = value
        if value then
            doFarm()
        end
    end
})

local Toggle = AddToggle(FarmPage, {
    Name = "Auto Sell",
    Default = false,
    Callback = function(value)
    getgenv().autoSell = value
        if value then
            doSell()
        end
    end
})

local Toggle = AddToggle(FarmPage, {
    Name = "Collect Hoops",
    Default = false,
    Callback = function(value)
    getgenv().collectHoop = value
        if value then
            getHoop()
        end
    end
})
-- Crystal
local CrystalLabel = AddTextLabel(UpgradePage, "Crystal Settings")
SetLabel(CrystalLabel, "Crystal Settings")
local crystalTable = {"Blue Crystal", "Purple Crystal", "Orange Crystal", "Enchanted Crystal", "Astral Crystal", "Golden Crystal", "Inferno Crystal", "Galaxy Crystal", "Frozen Crystal", "Eternal Crystal", "Storm Crystal", "Thunder Crystal", "Legends Crystal", "Eternity Crystal", "Infinity Eclipse Crystal", "Legendary Starstrike Crystal", "Christmas Legends Crystal", "Frostwave Legends Crystal", "Shadow Supernova Crystal", "Darkstar Orion Crystal", "Ancient Shurikens Crystal", "Shadowfire Legends Crystal", "Master Secrets Crystal", "Midnight Chaos Crystal", "Unlimited Secrets Crystal", "Dark Elements Crystal", "Mystic Shadows Crystal", "Omega Secrets Crystal", "Secret Glitch Crystal", "Silent Shadows Crystal", "Secret Blades Crystal", "Ultra Shockwave Crystal", "Infinity Void Crystal"}
local CrystalDropdown = AddDropdown(UpgradePage, {
    Name = "Crystal",
    Options = crystalTable,
    Default = "",
    Callback = function(value)
        selectedCrystal = value
    end
})
local Toggle = AddToggle(UpgradePage, {
    Name = "Auto Open Crystal",
    Default = false,
    Callback = function(value)
    getgenv().autoOpenCrystal = value
        if value then
            openCrystal()
        end
    end
})
local UpgradeLabel = AddTextLabel(UpgradePage, "Upgrade Settings")
SetLabel(UpgradeLabel, "Upgrade Settings")
local Toggle = AddToggle(UpgradePage, {
    Name = "Auto Buy Sword",
    Default = false,
    Callback = function(value)
    getgenv().buySword = value
        if value then
            upgSword()
        end
    end
})

local Toggle = AddToggle(UpgradePage, {
    Name = "Auto Buy Belt",
    Default = false,
    Callback = function(value)
    getgenv().buyBelt = value
        if value then
            upgBelt()
        end
    end
})

local Toggle = AddToggle(UpgradePage, {
    Name = "Auto Buy Rank",
    Default = false,
    Callback = function(value)
    getgenv().buyRank = value
        if value then
            upgRank()
        end
    end
})
local Toggle = AddToggle(UpgradePage, {
    Name = "Auto Buy Skill",
    Default = false,
    Callback = function(value)
    getgenv().buySkill = value
        if value then
            upgSkill()
        end
    end
})

--Teleport
local PlayerLabel = AddTextLabel(PlayerPage, "Player Settings")
SetLabel(PlayerLabel, "Player Settings")
local playerDropdown = AddDropdown(PlayerPage, {
    Name = "Players",
    Options = playerTable,
    Default = "",
    Callback = function(value)
        selectedPlayerName = value
        return value
    end
})

AddButton(PlayerPage, {
    Name = "Teleport to Player",
    Callback = function()
        if selectedPlayerName then
            local selectedPlayer = Players:FindFirstChild(selectedPlayerName)
            if selectedPlayer then
                HumanoidRootPart.CFrame = selectedPlayer.Character.HumanoidRootPart.CFrame
            else
                MakeNotifi({Title = "Warning",Text = "Player not found.",Time = 2})
            end
        else
            MakeNotifi({Title = "Warning",Text = "Select player to teleport.",Time = 2})
        end
    end
})

local Slider = AddSlider(PlayerPage, {
    Name = "Walk Speed",
    MinValue = 16,
    MaxValue = 250,
    Default = 25,
    Increase = 1,
    Callback = function(value)
        Humanoid.WalkSpeed = value
    end
})
local Slider = AddSlider(PlayerPage, {
    Name = "Jump Power",
    MinValue = 50,
    MaxValue = 500,
    Default = 100,
    Increase = 1,
    Callback = function(value)
        Humanoid.JumpPower = value
    end
})

AddButton(PlayerPage, {Name = "Anti AFK", Callback = function()
    local VirtualUser=game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
    end)
    MakeNotifi({
        Title = "Anti AFK",
        Text = "Anti AFK Enabled",
        Time = 2
    })
end})

local TeleportLabel = AddTextLabel(PlayerPage, "Teleport Settings")
SetLabel(TeleportLabel, "Teleport Settings")
local teleportDropdown = AddDropdown(PlayerPage, {
    Name = "Island",
    Options = teleportTable,
    Default = "",
    Callback = function(value)
        selectedIslandName = value
        return value
    end
})

AddButton(PlayerPage, {
    Name = "Teleport to Island",
    Callback = function()
        if selectedIslandName then
            local selectedIsland = Workspace.islandUnlockParts:FindFirstChild(selectedIslandName)
            if selectedIsland then
                HumanoidRootPart.CFrame = selectedIsland.CFrame
            else
                MakeNotifi({Title = "Warning",Text = "Island not found.",Time = 2})
            end
        else
            MakeNotifi({Title = "Warning",Text = "Select island to teleport.",Time = 2})
        end
    end
})
AddButton(PlayerPage, {
    Name = "Unlock All Island",
    Callback = function()
        for i,v in pairs(Workspace.islandUnlockParts:GetChildren()) do
            firetouchinterest(HumanoidRootPart, v, 0)
            firetouchinterest(HumanoidRootPart, v, 1)
        end        
    end
})
-- credits
local CreditsLabel = AddTextLabel(CreditsPage, "Credits")
SetLabel(CreditsLabel, "By Bskoe")
AddButton(CreditsPage, {Name = "Join our Discord!", Callback = function()
    setclipboard("https://discord.gg/aN7Q9u7ZVP")
    MakeNotifi({
        Title = "Discord",
        Text = "Link Copied!",
        Time = 2
    })
end})

-- functions
function doFarm()
    spawn(function()
        while autoSwing do task.wait()
            local args = {[1] = "swingKatana"}
            game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(args)) 
        end
    end)
end

function doSell()
    spawn(function()
        while autoSell do task.wait()
            for i, v in pairs(Workspace.sellAreaCircles.sellAreaCircle16.circleInner:GetDescendants()) do
                if v.Name == "TouchInterest" and v.Parent then
                    firetouchinterest(HumanoidRootPart, v.Parent, 0)
                    wait(0.1)
                    firetouchinterest(HumanoidRootPart, v.Parent, 1)
                end
            end
        end
    end)
end

function getHoop()
    spawn(function()
        while collectHoop do task.wait()
            for i,v in pairs(game:GetService("Workspace").Hoops:GetChildren()) do
                local args = {[1] = "useHoop",[2] = v}
                ReplicatedStorage.rEvents.hoopEvent:FireServer(unpack(args))
                wait()
            end
        end
    end)
end

function openCrystal()
    spawn(function()
        while autoOpenCrystal do task.wait()
            local args = {[1] = "openCrystal",[2] = selectedCrystal}
            game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("openCrystalRemote"):InvokeServer(unpack(args))            
        end
    end)
end

function upgSword()
    spawn(function()
        while buySword do task.wait()
            for i, v in pairs(ReplicatedStorage.Weapons:GetChildren()) do
                for _, Sword in pairs(v:GetChildren()) do
                    local args = {[1] = "buySword",[2] = Sword.Name}
                    game:GetService("Players").LocalPlayer:WaitForChild("ninjaEvent"):FireServer(unpack(args))
                    wait()
                end
            end
        end            
    end)
end

function upgBelt()
    spawn(function()
        while buyBelt do task.wait()
            for i,v in pairs(ReplicatedStorage.Belts:GetChildren()) do
                for _, Belt in pairs(v:GetChildren()) do
                    local args = {[1] = "buyBelt",[2] = Belt.Name}
                    game:GetService("Players").LocalPlayer:WaitForChild("ninjaEvent"):FireServer(unpack(args))
                    wait()
                end
            end
        end
    end)
end

function upgRank()
    spawn(function()
        while buyRank do task.wait()
            for i,v in pairs(ReplicatedStorage.Ranks.Ground:GetChildren()) do
                local args = {[1] = "buyRank",[2] = v.Name}
                game:GetService("Players").LocalPlayer:WaitForChild("ninjaEvent"):FireServer(unpack(args))    
            end
        end
    end)
end

function upgSkill()
    spawn(function()
        while buySkill do task.wait()
            for i,v in pairs(ReplicatedStorage.Skills:GetChildren()) do
                for _, Skill in pairs(v:GetChildren()) do
                    local args = {[1] = "buySkill",[2] = Skill.Name}
                    game:GetService("Players").LocalPlayer:WaitForChild("ninjaEvent"):FireServer(unpack(args))        
                end
            end
        end
    end)
end
